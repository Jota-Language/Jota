name: Release

on:
  release:
    types: [created]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux, darwin, windows]
        arch: [386, arm64, amd64]
        exclude:
          - os: darwin
            arch: 386
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
    - name: Setup Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.20'

    - name: Build
      run: |
        GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -ldflags="-s -w"
    
    - name: Archive
      run: |
        if [ "${{ matrix.os }}" = "windows" ]; then
          zip jota-${{ github.event.release.tag_name }}-${{ matrix.os }}-${{ matrix.arch }}.zip jota.exe LICENSE README.md
        else
          tar -czvf jota-${{ github.event.release.tag_name }}-${{ matrix.os }}-${{ matrix.arch }}.tar.gz jota LICENSE README.md
        fi
  
    - name: Upload
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: jota-${{ github.event.release.tag_name }}-${{ matrix.os }}-${{ matrix.arch }}.${{ matrix.os == 'windows' && 'zip' || 'tar.gz' }}
        asset_name: jota-${{ github.event.release.tag_name }}-${{ matrix.os }}-${{ matrix.arch }}.${{ matrix.os == 'windows' && 'zip' || 'tar.gz' }}
        asset_content_type: application/${{ matrix.os == 'windows' && 'zip' || 'gzip' }}
